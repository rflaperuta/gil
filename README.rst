gil
====

Me, learning about the Python Global Interpreter Lock


Example benchmark
-----------------

**Problem:** Countdown from 100,000,000 (one hundred million) to zero.
*Less is better*.

Results
~~~~~~~

**Python 2.7**

+-----+--------+-----------+-----------------+
|  x  | Linear | Threading | Multiprocessing |
+=====+========+===========+=================+
| 1 x |  7,3 s |    N/A    |       N/A       |
+-----+--------+-----------+-----------------+
| 2 x |  N/A   |    19,5 s |           3,9 s |
+-----+--------+-----------+-----------------+
| 4 x |  N/A   |    25,9 s |           2,0 s |
+-----+--------+-----------+-----------------+
| 8 x |  N/A   |    25,9 s |           1,5 s |
+-----+--------+-----------+-----------------+
| 16x |  N/A   |    25,8 s |           1,4 s |
+-----+--------+-----------+-----------------+

**Python 3.3**

+-----+--------+-----------+-----------------+
|  x  | Linear | Threading | Multiprocessing |
+=====+========+===========+=================+
| 1 x |  8,9 s |    N/A    |       N/A       |
+-----+--------+-----------+-----------------+
| 2 x |  N/A   |    29,7 s |           7,6 s |
+-----+--------+-----------+-----------------+
| 4 x |  N/A   |    26,2 s |           3,8 s |
+-----+--------+-----------+-----------------+
| 8 x |  N/A   |    25,4 s |           3,1 s |
+-----+--------+-----------+-----------------+
| 16x |  N/A   |    24,3 s |           2,8 s |
+-----+--------+-----------+-----------------+

**PyPy**

+-----+--------+-----------+-----------------+
|  x  | Linear | Threading | Multiprocessing |
+=====+========+===========+=================+
| 1 x |  0,2 s |    N/A    |       N/A       |
+-----+--------+-----------+-----------------+
| 2 x |  N/A   |     0,4 s |           0,2 s |
+-----+--------+-----------+-----------------+
| 4 x |  N/A   |     0,5 s |           0,1 s |
+-----+--------+-----------+-----------------+
| 8 x |  N/A   |     0,5 s |           0,1 s |
+-----+--------+-----------+-----------------+
| 16x |  N/A   |     0,5 s |           0,1 s |
+-----+--------+-----------+-----------------+

Extremely fast at CPU operations compared to CPython or Jython.
Not really significant gain with multiprocessing.
And yes, it still does have the GIL.

**Jython**

+-----+--------+-----------+-----------------+
|  x  | Linear | Threading | Multiprocessing |
+=====+========+===========+=================+
| 1 x |  4,9 s |    N/A    |       N/A       |
+-----+--------+-----------+-----------------+
| 2 x |  N/A   |     3,9 s |       not       |
+-----+--------+-----------+    available    |
| 4 x |  N/A   |     3,9 s |        in       |
+-----+--------+-----------+     Jython!     |
| 8 x |  N/A   |     2,5 s |                 |
+-----+--------+-----------+                 |
| 16x |  N/A   |     1,6 s |                 |
+-----+--------+-----------+-----------------+

Jython does not offer multiprocessing as it is Java. It only offers threading
(at the JVM not OS level).


Resources
---------

* http://www.dabeaz.com/python/UnderstandingGIL.pdf

and some more ;-)
